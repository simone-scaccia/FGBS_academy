quiz_maker_task:
  description: |
    You must perform these steps in exact order:
    
    1. First, read the JSON file using FileReadTool to get the questions data
    2. Then, read the quiz template file using FileReadTool to get the template structure
    3. Populate the template by replacing ALL placeholders with actual content from the JSON in the EXACT same order
    
    IMPORTANT RULES:
    - Use ONLY the questions from the JSON file - do NOT create new questions
    - Match the question types and order exactly as they appear in the JSON
    - Replace placeholders systematically based on the JSON content:
      * For true_false questions: use [TF_Question_X] placeholders
      * For multiple_choice questions: use [MC_Question_X] and [MC_Option_A_X], [MC_Option_B_X], [MC_Option_C_X], [MC_Option_D_X] placeholders
      * For open_ended questions: use [Open_Question_X] placeholders
    - The number X should match the position in the template (1, 2, 3, etc.)
    - PRESERVE THE ORIGINAL QUESTION NUMBERING from the template exactly as it appears
    - Do NOT renumber questions - keep the numbers from the template (e.g., if template shows "5. **[Open_Question_5]**", your output must be "5. **[actual question text]**")
    - If the JSON has fewer questions than template placeholders, only populate existing questions
    - If the JSON has more questions than template placeholders, only use the first N questions that fit the template
    
    CRITICAL FOR OPEN QUESTIONS: 
    - For open-ended questions, include ONLY the question text from the JSON
    - DO NOT include any answer or solution from the JSON file
    - Leave the answer lines empty with just underscores: ________________________________________________________
    - This is a BLANK quiz for students to fill out - no answers should be pre-filled
    
    CRITICAL: You must output the COMPLETE populated Markdown content, not just a description.
    Replace ALL placeholders with real content from the JSON. Do not leave any [placeholder] unfilled.
    Do NOT generate additional questions beyond what's in the JSON file.
    MAINTAIN EXACT NUMBERING from the template - do not restart numbering in any section.
  expected_output: |
    The complete Markdown quiz content with all placeholders replaced by actual questions and options from the JSON file.
    Must preserve the original template structure and replace only the placeholders with content from the JSON.
    
    Requirements:
    - Start with the exact template header (e.g., "# **Azure - AI_102**")
    - Include ALL quiz sections from the template
    - Replace each placeholder with the corresponding question/option from the JSON file
    - Maintain the template's formatting and structure
    - PRESERVE EXACT NUMBERING from template - do NOT renumber questions
    - If template shows "5. **[Open_Question_5]**", output must be "5. **[actual question text]**"
    - Use ONLY the questions provided in the JSON file
    - Do NOT add extra questions beyond what's in the JSON
    - Do NOT wrap in Markdown code blocks (```)
    - CRITICAL: Keep consecutive numbering across sections as defined in the template
    - FOR OPEN QUESTIONS: Include ONLY the question text, NOT the answers from JSON
    - Leave answer spaces blank with underscores for students to fill out
    
    NO placeholders like [TF_Question_1] should remain in the final output.
    NO renumbering of questions - maintain template numbering exactly.
  agent: quiz_maker

pdf_export_task:
  description: |
    Take the Markdown quiz content generated by the previous task and convert it into a PDF using the provided tool.
    Follow these formatting guidelines:

    Requirements:
    - Paper size: A4
    - Margins: ~2 cm
    - Preserve Markdown headings, lists, formatting, new lines
    - Number questions starting from 1 and finish at {number_of_questions}, continuously across sections

    Output a success message indicating the location of the saved PDF file.
  expected_output: >
    A success message indicating the location of the saved PDF file.
  agent: quiz_maker
  context: [quiz_maker_task]